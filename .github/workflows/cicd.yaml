name: Vue.js CI/CD

on:
  push:
    branches: [develop, main]
  pull_request:
    types: [closed]
    branches: [develop, main]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Docker build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_CONTAINER }} .

      - name: Docker login
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker push to DockerHub
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_CONTAINER }}

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get GitHub IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Add GitHub IP to Security Group
        run: aws ec2 authorize-security-group-ingress \
          --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
          --protocol tcp --port ${{ secrets.EC2_SSH_PORT }} \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy Docker container to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          timeout: 60s
          script: |
            echo "Stopping existing container..."
            sudo docker stop ${{ secrets.DOCKER_CONTAINER }} || true
            sudo docker rm ${{ secrets.DOCKER_CONTAINER }} || true

            echo "Pulling latest image..."
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_CONTAINER }}:latest

            echo "Running new container..."
            sudo docker run -d --name ${{ secrets.DOCKER_CONTAINER }} -p ${{ secrets.HOST_PORT }}:${{ secrets.APPLICATION_PORT }} \
              --network ${{ secrets.DOCKER_NETWORK }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_CONTAINER }}:latest

            echo "Cleaning up unused images..."
            sudo docker image prune -f

      - name: Remove GitHub IP from Security Group
        run: aws ec2 revoke-security-group-ingress \
          --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
          --protocol tcp --port ${{ secrets.EC2_SSH_PORT }} \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
